- name: Make sure dependencies are installed
  ansible.builtin.apt:
    name:
    - snapd
    - fuse
    - udev
    state: present
    update_cache: true
    cache_valid_time: "{{ microk8s_cache_valid_time }}"
  tags:
  - microk8s
  - microk8s.dependencies
  - microk8s.dependencies.apt

- name: Start and Enable Services
  ansible.builtin.service:
    name: "{{ microk8s_service }}"
    state: started
    enabled: true
  with_items:
  - snapd
  - udev
  loop_control:
    loop_var: microk8s_service
    label: "{{ microk8s_service }}"
  tags:
  - microk8s
  - microk8s.dependencies
  - microk8s.dependencies.services

- name: "Install microk8s (channel: {{ microk8s_snap_channel }})"
  community.general.snap:
    name: microk8s
    classic: true
    channel: "{{ microk8s_snap_channel }}"
  tags:
  - microk8s
  - microk8s.install

- name: Wait for microk8s to be ready
  ansible.builtin.command:
    cmd: microk8s.status --wait-ready
  changed_when: false
  tags:
  - notest
  - microk8s
  - microk8s.ready

- name: Create kubectl alias
  ansible.builtin.command:
    cmd: snap alias microk8s.kubectl kubectl
  changed_when: false
  tags:
  - microk8s
  - microk8s.alias
  - microk8s.alias.kubectl

- name: Create helm3 alias
  ansible.builtin.command:
    cmd: snap alias microk8s.helm3 helm
  changed_when: false
  when:
  - microk8s_plugins is defined
  - microk8s_plugins.helm3 is defined
  - microk8s_plugins.helm3
  tags:
  - microk8s
  - microk8s.alias
  - microk8s.alias.helm

- name: Create folder for microk8s certificates
  ansible.builtin.file:
    path: /usr/share/ca-certificates/extra
    state: directory
    mode: 0755
  tags:
  - microk8s
  - microk8s.certs
  - microk8s.certs.dir

- name: Copy certificates
  ansible.builtin.copy:
    src: "{{ microk8s_ca }}"
    dest: /usr/share/ca-certificates/extra
    remote_src: true
    force: true
    mode: 0644
  with_fileglob:
  - "/var/snap/microk8s/current/certs/*ca*.crt"
  loop_control:
    loop_var: microk8s_ca
    label: "{{ microk8s_ca }}"
  tags:
  - microk8s
  - microk8s.certs
  - microk8s.certs.copy

- name: Trust certificates generated by microk8s
  ansible.builtin.command:
    cmd: update-ca-certificates
  register: microk8s_cmd_result
  changed_when: "'0 added, 0 removed' not in microk8s_cmd_result.stdout"
  tags:
  - microk8s
  - microk8s.certs
  - microk8s.certs.trust

- name: Disable snap autoupdate
  ansible.builtin.blockinfile:
    dest: /etc/hosts
    marker: "# {mark} ANSIBLE MANAGED: microk8s Disable snap autoupdate"
    content: |
      127.0.0.1 api.snapcraft.io
  when:
  - (microk8s_disable_snap_autoupdate | bool)
  tags:
  - notest
  - microk8s
  - microk8s.disable_autoupdate
